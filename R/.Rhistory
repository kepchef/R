#R패키지 설치
install.packages('stringr')
###############
#기본 막대 차트
###############
count <- c(1,2,3,4,5)
barplot(count)
score <- c(80, 72, 60, 78, 82)
names(score) <- c('김유신','김춘추','장보고','강감찬','이순신')
barplot(score)
###############
#범주행 막대 차트
###############
season <- c('winter','summer','spring','summer','summer','spring','semmer','spring','semmer')
season
###############
#범주행 막대 차트
###############
season <- c('winter','summer','spring','summer','summer','spring','semmer','spring','semmer')
season
barplot(season)
df_population <- read.csv('./file/sample_population.csv')
df_population
View(df_population)
df_population <- read.csv('./file/sample_population.csv')
df_population
View(df_population)
df_population <- read.csv('./file/sample_population.csv')
df_population
View(df_population)
df_exam <- read.csv('./file/exam.csv')
df_exam
#View() -데이터프레임 테이블로 출력
View(df_exam)
df_exam <- read.csv('./file/exam.csv')
df_exam
#View() -데이터프레임 테이블로 출력
View(df_exam)
library(KoNLP)
library(dplyr)
library(stringr)
library(wordcloud)
#텍스트 데이터 불러오기
txt_data <- readLines('./file/wordcloud_data.txt', encoding = 'UTF-8')
txt_data
#데이터 불러오기
naver_keyword <- readLines('C:/Users/bigdata/Desktop/workspace/R/file/naver_keyword.csv', encoding = 'UTF-8')
naver_keyword
#키워드 집계
naver_keyword_count <- table(unlist(naver_keyword))
naver_keyword_count
#데이터프레임 변환
df_naver <- as.data.frame(naver_keyword_count, stringsAsFactors = F)
View(df_naver)
#단어 시각화
wordcloud(words = df_naver$Var1,
freq  = df_naver$Freq,
min.freq = 2,
max.words = 1000,
random.order = F,
scale = c(5, 0.8),
colors = brewer.pal(12, 'Paired'))
#텍스트 데이터 불러오기
txt_data <- readLines('C:/Users/bigdata/Desktop/workspace/R/file/wordcloud_data.txt', encoding = 'UTF-8')
txt_data
#데이터 불러오기
naver_keyword <- readLines('./file/naver_keyword.csv', encoding = 'UTF-8')
naver_keyword
#데이터 불러오기
naver_keyword <- readLines('./file/naver_keyword.csv', encoding = 'UTF-8')
naver_keyword
#키워드 집계
naver_keyword_count <- table(unlist(naver_keyword))
naver_keyword_count
#데이터프레임 변환
df_naver <- as.data.frame(naver_keyword_count, stringsAsFactors = F)
View(df_naver)
#단어 시각화
wordcloud(words = df_naver$Var1,
freq  = df_naver$Freq,
min.freq = 2,
max.words = 1000,
random.order = F,
scale = c(5, 0.8),
colors = brewer.pal(12, 'Paired'))
install.packages("rJava")
install.packages("DBI")
install.packages("DBI")
install.packages("RJDBC")
library(DBI)
library(rJava)
library(RJDBC)
library(dplyr)
library(ggplot2)
#부산 데이터프레임 가곡처리
df_busan <- df_weather_20210101 %>% select(everything()) %>% filter(coll =='부산')
View(df_busan)
#드라이버 로드
driver <- JDBC(driverClass = 'com.mysql.Driver','./file/mysql-connector-java-5.1.49.jar')
#데이터베이스 접속
conn <- dbConnect(driver, 'jdbc:mysql://192.168.10.114:/weather', 'weather', '1234')
#드라이버 로드
driver <- JDBC(driverClass = 'com.mysql.Driver', './file/file/mysql-connector-java-5.1.49.jar')
#데이터베이스 접속
conn <- dbConnect(driver, 'jdbc:mysql://192.168.10.114:/weather', 'weather', '1234')
#쿼리 실행
df_weather_20210101 <- dbGetQuery(conn, "SELRCT * FROM '2021-01-01")
#데이터베이스 접속 종료
dbDisconnect(conn)
#부산 데이터프레임 가곡처리
df_busan <- df_weather_20210101 %>% select(everything()) %>% filter(coll =='부산')
View(df_busan)
#드라이버 로드
driver <- JDBC(driverClass = 'com.mysql.Driver', 'C:/Users/bigdata/Desktop/workspace/R/file/file/mysql-connector-java-5.1.49.jar')
#드라이버 로드
driver <- JDBC(driverClass = 'com.mysql.jdbc.Driver', './file/mysql-connector-java-5.1.49.jar')
#데이터베이스 접속
conn <- dbConnect(driver, 'jdbc:mysql://192.168.10.114:3306/weather', 'weather', '1234')
#쿼리실행
df_weather_20210101 <- dbGetQuery(conn, "SELECT * FROM `2021-01-01`")
View(df_weather_20210101)
#드라이버 로드
driver <- JDBC(driverClass = 'com.mysql.jdbc.Driver', 'C:/Users/bigdata/Desktop/workspace/R//file/mysql-connector-java-5.1.49.jar')
#드라이버 로드
driver <- JDBC(driverClass = 'com.mysql.jdbc.Driver', 'C:/Users/bigdata/Desktop/workspace/R/file/mysql-connector-java-5.1.49.jar')
#데이터베이스 접속
conn <- dbConnect(driver, 'jdbc:mysql://192.168.10.114:3306/weather', 'weather', '1234')
#쿼리실행
df_weather_20210101 <- dbGetQuery(conn, "SELECT * FROM `2021-01-01`")
View(df_weather_20210101)
#데이터베이스 접속종료
dbDisconnect(conn)
#부산 데이터프레임 가공처리
df_busan <- df_weather_20210101 %>% select(everything()) %>% filter(col1 == '부산')
View(df_busan)
#요약 통계 방법2
df_busan %>% summarise(mean=mean(col6), min=min(col6), max=max(col6))
#시각화
ggplot(data = df_busan, aes(x=col1, y=col6)) + geom_boxplot()
ggplot(data = df_busan, aes(x= rdate, y=col6, group=1)) + geom_line()
ggplot(data=df_busan, aes(x=rdate, y=col6)) + geom_col()
#1) 귀무가설가 대립가설을 성정
# 귀무가설 : 모집단의 평균은 30kg이다.
# 대립가설 : 모집단의 평균은 30kg이 아니다.
x <- c(35, 32, 33, 28, 29, 30, 31, 29, 28, 30)
mean(x)
#3) 검정통계량 구함
z=(mean(x) - 30) / 5 * sqrt(10)
z
