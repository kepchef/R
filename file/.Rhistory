#R패키지 설치
install.packages('stringr')
###############
#기본 막대 차트
###############
count <- c(1,2,3,4,5)
barplot(count)
score <- c(80, 72, 60, 78, 82)
names(score) <- c('김유신','김춘추','장보고','강감찬','이순신')
barplot(score)
###############
#범주행 막대 차트
###############
season <- c('winter','summer','spring','summer','summer','spring','semmer','spring','semmer')
season
###############
#범주행 막대 차트
###############
season <- c('winter','summer','spring','summer','summer','spring','semmer','spring','semmer')
season
barplot(season)
df_population <- read.csv('./file/sample_population.csv')
df_population
View(df_population)
df_population <- read.csv('./file/sample_population.csv')
df_population
View(df_population)
df_population <- read.csv('./file/sample_population.csv')
df_population
View(df_population)
df_exam <- read.csv('./file/exam.csv')
df_exam
#View() -데이터프레임 테이블로 출력
View(df_exam)
df_exam <- read.csv('./file/exam.csv')
df_exam
#View() -데이터프레임 테이블로 출력
View(df_exam)
#컬럼명이 있는 파일 불러오기
student1 <- read.table('student1.txt', header=T)
student1
#작업 디렉터리 지정
setwd('C:/Users/bigdata/Desktop/Workspace/R/file')
#컬럼명이 없는 파일 불러오기
student <- read.table('student.txt')
student
class(student)
#컬럼명이 있는 파일 불러오기
student1 <- read.table('student1.txt', header=T)
student1
#작업 디렉터리 지정
setwd('C:/Users/bigdata/Desktop/Workspace/R/file')
#데이터 파일로 저장하기
write.csv(titnic, 'github_titanic.csv', row.names = T)
df_exam <- read.csv('./file/exam.csv')
df_exam
#View() - 데이터프레임 테이블로 출력
View(df_exam)
#교재 p110 실습 - if() 사용으로 입력된 점수의 학점 구하기
score  <- scan()
if(score>=80){
result <- "우수"
}
cat("당신은 학점은",result,score)
#교재 p111 실습 - if ~ else if 형식으로 학점 구하기
score <- scan()
}else if(score>=80){
result="B학점"
}else if(score>=70){
result="C학점"
}else if(score>=60){
result="D학점"
}else{
result="F학점"
}
cat("당신의 학점은",result)
setwd('./file/exam.csv)
exam.csv <- read.table('exam.txt')
exa
student <- read.table('exam')
student
class(student)
getwd()
df_exam <- read.csv('./file/exam.csv')
df_exam
View(df_exam)
df_exam <- read.csv('./file/exam.csv')
df_exam
View(df_exam)
################
#박스상자 기본
################
cars
str(cars)
View(cars)
df_exam <- read.csv('./file/exam.csv')
df_exam
View(df_exam)
str(./file/df_exam)
View(df_exam)
str(./file/df_exam.csv)
View(df_exam)
View(df_exam.csv)
str(./file/df_exam.csv)
View(df_exam.csv)
str(./file/df_exam)
View(df_exam)
str(exam)
View(exam)
str(df_exam)
View(df_exam)
df_exam <- read.csv('./file/exam.csv')
View(df_exam)
install.packages('dplyr')
library(dplyr)
df_exam <- read.csv('./file/exam.csv')
View(df_exam)
#select - 데이터프레임에서 특정 변수를 선택해서 새로운 데이터프레임 생성
df_math    <- df_exam %>% select(math)          #SELECT `math`    FROM `df_exam`;
df_exam <- read.csv('./file/exam.csv')
View(df_exam)
df_exam <- read.csv('C:/Users/bigdata/Desktop/workspace/R/file/exam.csv')
View(df_exam)
df_exam <- read.csv('C:/Users/bigdata/Desktop/workspace/R/file/exam.csv')
View(df_exam)
#select - 데이터프레임에서 특정 변수를 선택해서 새로운 데이터프레임 생성
df_math    <- df_exam %>% select(math)          #SELECT `math`    FROM `df_exam`;
df_english <- df_exam %>% select(english)       #SELECT `english` FROM `df_exam`;
df_result1 <- df_exam %>% select(math, science) #SELECT `math`, `science` FROM `df_exam`;
df_result2 <- df_exam %>% select(everything())  #SELECT * FROM `df_exam`;
df_math
df_english
df_result1
df_math
df_english
df_result1
df_result2
#select - 데이터프레임에서 특정 변수를 선택해서 새로운 데이터프레임 생성
df_math    <- df_exam %>% select(math)          #SELECT `math`    FROM `df_exam`;
df_english <- df_exam %>% select(english)       #SELECT `english` FROM `df_exam`;
df_result1 <- df_exam %>% select(math, science) #SELECT `math`, `science` FROM `df_exam`;
df_result2 <- df_exam %>% select(everything())  #SELECT * FROM `df_exam`;
df_math
df_english
df_result1
df_result1
df_result1
#select - 데이터프레임에서 특정 변수를 선택해서 새로운 데이터프레임 생성
df_math    <- df_exam %>% select(math)          #SELECT `math`    FROM `df_exam`;
df_english <- df_exam %>% select(english)       #SELECT `english` FROM `df_exam`;
df_result1 <- df_exam %>% select(science)       #SELECT `math`, `science` FROM `df_exam`;
df_result2 <- df_exam %>% select(everything())  #SELECT * FROM `df_exam`;
df_math
df_english
df_result1
#filter
df_filter1 <- df_exam %>% select(everything()) %>% filter(class == 1)
df_filter1
df_filter2
df_filter2 <- df_exam %>% select(everything()) %>% filter(math >= 60 & math < 80)
df_filter3 <- df_exam %>% select(everything()) %>% filter(english >= 60 | science < 80)
df_filter2
df_filter3
#select - 데이터프레임에서 특정 변수를 선택해서 새로운 데이터프레임 생성
df_math    <- df_exam %>% select(math)          #SELECT `math`    FROM `df_exam`;
df_english <- df_exam %>% select(english)       #SELECT `english` FROM `df_exam`;
df_math
df_filter2 <- df_exam %>% select(everything()) %>% filter(math >= 60 & math < 80)
df_filter1
df_filter2 <- df_exam %>% select(math()) %>% filter(math >= 60 & math < 80)
df_filter2
df_filter2 <- df_exam %>% select(math()) %>% filter(math >= 60 & math < 80)
df_filter2
df_filter2 <- df_exam %>% select(everything()) %>% filter(math >= 60 & math < 80)
df_filter2
#filter
df_filter1 <- df_exam %>% select(everything()) %>% filter(class == 1)
df_filter2 <- df_exam %>% select(everything()) %>% filter(math >= 60 & math < 80)
df_filter3 <- df_exam %>% select(everything()) %>% filter(english >= 60 | science < 80)
df_filter1
df_filter2
df_filter3
#arrange
df_math_asc  <- df_exam %>% select(math) %>% filter(math >= 60) %>% arrange(math)
df_math_asc
#arrange
df_math_asc  <- df_exam %>% select(math) %>% filter(math >= 60 & math < 80) %>% arrange(math)
df_math_desc <- df_exam %>% select(math) %>% filter(math >= 60 & math < 80) %>% arrange(desc(math))
df_math_asc
df_math_desc
df_exam <- read.csv('C:/Users/bigdata/Desktop/workspace/R/file/exam.csv')
View(df_exam)
df_filter2 <- df_exam %>% select(everything()) %>% filter(math >= 60 & math < 80)
df_filter2
df_filter2 <- df_exam %>% select(math()) %>% filter(math >= 60 & math < 80)
df_filter2
df_filter2 <- df_exam %>% select(math) %>% filter(math >= 60 & math < 80)
df_filter2
df_filter2 <- df_exam %>% select(english) %>% filter(english >= 60 & math < 80)
df_filter2
df_filter2 <- df_exam %>% select(english) %>% filter(english >= 60 & english < 80)
df_filter2
df_filter2 <- df_exam %>% select(science) %>% filter(science >= 60 & science < 80)
df_filter2
df_filter3 <- df_exam %>% select(math) %>% filter(math >= 60 & math < 80)
df_filter3 <- df_exam %>% select(math) %>% filter(math >= 60 & math < 80)
df_filter3
#arrange
df_math_asc  <- df_exam %>% select(math) %>% filter(math >= 60 & math < 80) %>% arrange(math)
df_math_asc
df_math_desc <- df_exam %>% select(math) %>% filter(math >= 60 & math < 80) %>% arrange(desc(math))
df_math_desc
df_filter6 <- df_exam %>% select(everything()) %>% filter(math >= 60)
df_filter6
df_filter6 <- df_exam %>% select(math) %>% filter(math >= 60)
df_filter6
df_filter6 <- df_exam %>% select(class,id,math) %>% filter(math >= 60)
df_filter6
#mutate - 데이터프레임의 새로운 파생변수를 생성할때 사용
df_total <- df_exam %>% mutate(total = math + english + science)
df_total
df_grade <- df_exam %>% mutate(total = math + english + science) %>%
mutate(mean  = total/3) %>%
mutate(grade = ifelse(mean >= 90, 'A',
ifelse(mean >= 80, 'B',
ifelse(mean >= 70, 'C',
ifelse(mean >= 60, 'D', 'F')))))
df_grade
df_mean  <- df_exam %>% mutate(total = math + english + science) %>% mutate(mean = total/3)
df_mean
df_grade <- df_exam %>% mutate(total = math + english + science) %>%
mutate(mean  = total/3) %>%
mutate(grade = ifelse(mean >= 90, 'A',
ifelse(mean >= 80, 'B',
ifelse(mean >= 70, 'C',
ifelse(mean >= 60, 'D', 'F')))))
df_grade
df_total <- df_exam %>% mutate(total = math + english + science)
df_total
View(df_total)
